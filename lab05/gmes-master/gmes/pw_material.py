# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _pw_material
else:
    import _pw_material

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class PwMaterialParam(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.PwMaterialParam_swiginit(self, _pw_material.new_PwMaterialParam())
    __swig_destroy__ = _pw_material.delete_PwMaterialParam

# Register PwMaterialParam in _pw_material:
_pw_material.PwMaterialParam_swigregister(PwMaterialParam)

class ElectricParamReal(PwMaterialParam):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    eps_inf = property(_pw_material.ElectricParamReal_eps_inf_get, _pw_material.ElectricParamReal_eps_inf_set)

    def __init__(self):
        _pw_material.ElectricParamReal_swiginit(self, _pw_material.new_ElectricParamReal())
    __swig_destroy__ = _pw_material.delete_ElectricParamReal

# Register ElectricParamReal in _pw_material:
_pw_material.ElectricParamReal_swigregister(ElectricParamReal)

class MagneticParamReal(PwMaterialParam):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mu_inf = property(_pw_material.MagneticParamReal_mu_inf_get, _pw_material.MagneticParamReal_mu_inf_set)

    def __init__(self):
        _pw_material.MagneticParamReal_swiginit(self, _pw_material.new_MagneticParamReal())
    __swig_destroy__ = _pw_material.delete_MagneticParamReal

# Register MagneticParamReal in _pw_material:
_pw_material.MagneticParamReal_swigregister(MagneticParamReal)

class PwMaterialReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pw_material.delete_PwMaterialReal

    def name(self):
        return _pw_material.PwMaterialReal_name(self)

    def attach(self, idx, parameter):
        return _pw_material.PwMaterialReal_attach(self, idx, parameter)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.PwMaterialReal_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def find(self, idx):
        return _pw_material.PwMaterialReal_find(self, idx)

    def merge(self, pm):
        return _pw_material.PwMaterialReal_merge(self, pm)

    def idx_size(self):
        return _pw_material.PwMaterialReal_idx_size(self)

# Register PwMaterialReal in _pw_material:
_pw_material.PwMaterialReal_swigregister(PwMaterialReal)

class MaterialElectricReal(PwMaterialReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def get_eps_inf(self, idx):
        return _pw_material.MaterialElectricReal_get_eps_inf(self, idx)

    def find(self, idx):
        return _pw_material.MaterialElectricReal_find(self, idx)
    __swig_destroy__ = _pw_material.delete_MaterialElectricReal

# Register MaterialElectricReal in _pw_material:
_pw_material.MaterialElectricReal_swigregister(MaterialElectricReal)

class MaterialMagneticReal(PwMaterialReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def get_mu_inf(self, idx):
        return _pw_material.MaterialMagneticReal_get_mu_inf(self, idx)

    def find(self, idx):
        return _pw_material.MaterialMagneticReal_find(self, idx)
    __swig_destroy__ = _pw_material.delete_MaterialMagneticReal

# Register MaterialMagneticReal in _pw_material:
_pw_material.MaterialMagneticReal_swigregister(MaterialMagneticReal)

class DummyElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyElectricParamReal_swiginit(self, _pw_material.new_DummyElectricParamReal())
    __swig_destroy__ = _pw_material.delete_DummyElectricParamReal

# Register DummyElectricParamReal in _pw_material:
_pw_material.DummyElectricParamReal_swigregister(DummyElectricParamReal)

class DummyMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyMagneticParamReal_swiginit(self, _pw_material.new_DummyMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_DummyMagneticParamReal

# Register DummyMagneticParamReal in _pw_material:
_pw_material.DummyMagneticParamReal_swigregister(DummyMagneticParamReal)

class DummyElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DummyElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DummyElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DummyElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DummyElectricReal_merge(self, pm_ptr)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.DummyElectricReal_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def __init__(self):
        _pw_material.DummyElectricReal_swiginit(self, _pw_material.new_DummyElectricReal())
    __swig_destroy__ = _pw_material.delete_DummyElectricReal

# Register DummyElectricReal in _pw_material:
_pw_material.DummyElectricReal_swigregister(DummyElectricReal)

class DummyMagneticReal(MaterialMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DummyMagneticReal_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.DummyMagneticReal_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DummyMagneticReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DummyMagneticReal_merge(self, pm_ptr)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.DummyMagneticReal_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def __init__(self):
        _pw_material.DummyMagneticReal_swiginit(self, _pw_material.new_DummyMagneticReal())
    __swig_destroy__ = _pw_material.delete_DummyMagneticReal

# Register DummyMagneticReal in _pw_material:
_pw_material.DummyMagneticReal_swigregister(DummyMagneticReal)

class DummyExReal(DummyElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyExReal_swiginit(self, _pw_material.new_DummyExReal())
    __swig_destroy__ = _pw_material.delete_DummyExReal

# Register DummyExReal in _pw_material:
_pw_material.DummyExReal_swigregister(DummyExReal)

class DummyEyReal(DummyElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyEyReal_swiginit(self, _pw_material.new_DummyEyReal())
    __swig_destroy__ = _pw_material.delete_DummyEyReal

# Register DummyEyReal in _pw_material:
_pw_material.DummyEyReal_swigregister(DummyEyReal)

class DummyEzReal(DummyElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyEzReal_swiginit(self, _pw_material.new_DummyEzReal())
    __swig_destroy__ = _pw_material.delete_DummyEzReal

# Register DummyEzReal in _pw_material:
_pw_material.DummyEzReal_swigregister(DummyEzReal)

class DummyHxReal(DummyMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyHxReal_swiginit(self, _pw_material.new_DummyHxReal())
    __swig_destroy__ = _pw_material.delete_DummyHxReal

# Register DummyHxReal in _pw_material:
_pw_material.DummyHxReal_swigregister(DummyHxReal)

class DummyHyReal(DummyMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyHyReal_swiginit(self, _pw_material.new_DummyHyReal())
    __swig_destroy__ = _pw_material.delete_DummyHyReal

# Register DummyHyReal in _pw_material:
_pw_material.DummyHyReal_swigregister(DummyHyReal)

class DummyHzReal(DummyMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyHzReal_swiginit(self, _pw_material.new_DummyHzReal())
    __swig_destroy__ = _pw_material.delete_DummyHzReal

# Register DummyHzReal in _pw_material:
_pw_material.DummyHzReal_swigregister(DummyHzReal)

class ConstElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    value = property(_pw_material.ConstElectricParamReal_value_get, _pw_material.ConstElectricParamReal_value_set)

    def __init__(self):
        _pw_material.ConstElectricParamReal_swiginit(self, _pw_material.new_ConstElectricParamReal())
    __swig_destroy__ = _pw_material.delete_ConstElectricParamReal

# Register ConstElectricParamReal in _pw_material:
_pw_material.ConstElectricParamReal_swigregister(ConstElectricParamReal)

class ConstMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    value = property(_pw_material.ConstMagneticParamReal_value_get, _pw_material.ConstMagneticParamReal_value_set)

    def __init__(self):
        _pw_material.ConstMagneticParamReal_swiginit(self, _pw_material.new_ConstMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_ConstMagneticParamReal

# Register ConstMagneticParamReal in _pw_material:
_pw_material.ConstMagneticParamReal_swigregister(ConstMagneticParamReal)

class ConstElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.ConstElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.ConstElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.ConstElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.ConstElectricReal_merge(self, pm_ptr)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.ConstElectricReal_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def __init__(self):
        _pw_material.ConstElectricReal_swiginit(self, _pw_material.new_ConstElectricReal())
    __swig_destroy__ = _pw_material.delete_ConstElectricReal

# Register ConstElectricReal in _pw_material:
_pw_material.ConstElectricReal_swigregister(ConstElectricReal)

class ConstMagneticReal(MaterialMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.ConstMagneticReal_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.ConstMagneticReal_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.ConstMagneticReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.ConstMagneticReal_merge(self, pm_ptr)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.ConstMagneticReal_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def __init__(self):
        _pw_material.ConstMagneticReal_swiginit(self, _pw_material.new_ConstMagneticReal())
    __swig_destroy__ = _pw_material.delete_ConstMagneticReal

# Register ConstMagneticReal in _pw_material:
_pw_material.ConstMagneticReal_swigregister(ConstMagneticReal)

class ConstExReal(ConstElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstExReal_swiginit(self, _pw_material.new_ConstExReal())
    __swig_destroy__ = _pw_material.delete_ConstExReal

# Register ConstExReal in _pw_material:
_pw_material.ConstExReal_swigregister(ConstExReal)

class ConstEyReal(ConstElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstEyReal_swiginit(self, _pw_material.new_ConstEyReal())
    __swig_destroy__ = _pw_material.delete_ConstEyReal

# Register ConstEyReal in _pw_material:
_pw_material.ConstEyReal_swigregister(ConstEyReal)

class ConstEzReal(ConstElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstEzReal_swiginit(self, _pw_material.new_ConstEzReal())
    __swig_destroy__ = _pw_material.delete_ConstEzReal

# Register ConstEzReal in _pw_material:
_pw_material.ConstEzReal_swigregister(ConstEzReal)

class ConstHxReal(ConstMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstHxReal_swiginit(self, _pw_material.new_ConstHxReal())
    __swig_destroy__ = _pw_material.delete_ConstHxReal

# Register ConstHxReal in _pw_material:
_pw_material.ConstHxReal_swigregister(ConstHxReal)

class ConstHyReal(ConstMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstHyReal_swiginit(self, _pw_material.new_ConstHyReal())
    __swig_destroy__ = _pw_material.delete_ConstHyReal

# Register ConstHyReal in _pw_material:
_pw_material.ConstHyReal_swigregister(ConstHyReal)

class ConstHzReal(ConstMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstHzReal_swiginit(self, _pw_material.new_ConstHzReal())
    __swig_destroy__ = _pw_material.delete_ConstHzReal

# Register ConstHzReal in _pw_material:
_pw_material.ConstHzReal_swigregister(ConstHzReal)

class DielectricElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DielectricElectricParamReal_swiginit(self, _pw_material.new_DielectricElectricParamReal())
    __swig_destroy__ = _pw_material.delete_DielectricElectricParamReal

# Register DielectricElectricParamReal in _pw_material:
_pw_material.DielectricElectricParamReal_swigregister(DielectricElectricParamReal)

class DielectricMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DielectricMagneticParamReal_swiginit(self, _pw_material.new_DielectricMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_DielectricMagneticParamReal

# Register DielectricMagneticParamReal in _pw_material:
_pw_material.DielectricMagneticParamReal_swigregister(DielectricMagneticParamReal)

class DielectricElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DielectricElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DielectricElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DielectricElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DielectricElectricReal_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_DielectricElectricReal

# Register DielectricElectricReal in _pw_material:
_pw_material.DielectricElectricReal_swigregister(DielectricElectricReal)

class DielectricMagneticReal(MaterialMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DielectricMagneticReal_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.DielectricMagneticReal_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DielectricMagneticReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DielectricMagneticReal_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_DielectricMagneticReal

# Register DielectricMagneticReal in _pw_material:
_pw_material.DielectricMagneticReal_swigregister(DielectricMagneticReal)

class DielectricExReal(DielectricElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.DielectricExReal_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DielectricExReal_swiginit(self, _pw_material.new_DielectricExReal())
    __swig_destroy__ = _pw_material.delete_DielectricExReal

# Register DielectricExReal in _pw_material:
_pw_material.DielectricExReal_swigregister(DielectricExReal)

class DielectricEyReal(DielectricElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.DielectricEyReal_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DielectricEyReal_swiginit(self, _pw_material.new_DielectricEyReal())
    __swig_destroy__ = _pw_material.delete_DielectricEyReal

# Register DielectricEyReal in _pw_material:
_pw_material.DielectricEyReal_swigregister(DielectricEyReal)

class DielectricEzReal(DielectricElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.DielectricEzReal_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DielectricEzReal_swiginit(self, _pw_material.new_DielectricEzReal())
    __swig_destroy__ = _pw_material.delete_DielectricEzReal

# Register DielectricEzReal in _pw_material:
_pw_material.DielectricEzReal_swigregister(DielectricEzReal)

class DielectricHxReal(DielectricMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hx, ez, ey, dy, dz, dt, n):
        return _pw_material.DielectricHxReal_update_all(self, hx, ez, ey, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DielectricHxReal_swiginit(self, _pw_material.new_DielectricHxReal())
    __swig_destroy__ = _pw_material.delete_DielectricHxReal

# Register DielectricHxReal in _pw_material:
_pw_material.DielectricHxReal_swigregister(DielectricHxReal)

class DielectricHyReal(DielectricMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hy, ex, ez, dz, dx, dt, n):
        return _pw_material.DielectricHyReal_update_all(self, hy, ex, ez, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DielectricHyReal_swiginit(self, _pw_material.new_DielectricHyReal())
    __swig_destroy__ = _pw_material.delete_DielectricHyReal

# Register DielectricHyReal in _pw_material:
_pw_material.DielectricHyReal_swigregister(DielectricHyReal)

class DielectricHzReal(DielectricMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hz, ey, ex, dx, dy, dt, n):
        return _pw_material.DielectricHzReal_update_all(self, hz, ey, ex, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DielectricHzReal_swiginit(self, _pw_material.new_DielectricHzReal())
    __swig_destroy__ = _pw_material.delete_DielectricHzReal

# Register DielectricHzReal in _pw_material:
_pw_material.DielectricHzReal_swigregister(DielectricHzReal)

class UpmlElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    c1 = property(_pw_material.UpmlElectricParamReal_c1_get, _pw_material.UpmlElectricParamReal_c1_set)
    c2 = property(_pw_material.UpmlElectricParamReal_c2_get, _pw_material.UpmlElectricParamReal_c2_set)
    c3 = property(_pw_material.UpmlElectricParamReal_c3_get, _pw_material.UpmlElectricParamReal_c3_set)
    c4 = property(_pw_material.UpmlElectricParamReal_c4_get, _pw_material.UpmlElectricParamReal_c4_set)
    c5 = property(_pw_material.UpmlElectricParamReal_c5_get, _pw_material.UpmlElectricParamReal_c5_set)
    c6 = property(_pw_material.UpmlElectricParamReal_c6_get, _pw_material.UpmlElectricParamReal_c6_set)
    d = property(_pw_material.UpmlElectricParamReal_d_get, _pw_material.UpmlElectricParamReal_d_set)

    def __init__(self):
        _pw_material.UpmlElectricParamReal_swiginit(self, _pw_material.new_UpmlElectricParamReal())
    __swig_destroy__ = _pw_material.delete_UpmlElectricParamReal

# Register UpmlElectricParamReal in _pw_material:
_pw_material.UpmlElectricParamReal_swigregister(UpmlElectricParamReal)

class UpmlMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    c1 = property(_pw_material.UpmlMagneticParamReal_c1_get, _pw_material.UpmlMagneticParamReal_c1_set)
    c2 = property(_pw_material.UpmlMagneticParamReal_c2_get, _pw_material.UpmlMagneticParamReal_c2_set)
    c3 = property(_pw_material.UpmlMagneticParamReal_c3_get, _pw_material.UpmlMagneticParamReal_c3_set)
    c4 = property(_pw_material.UpmlMagneticParamReal_c4_get, _pw_material.UpmlMagneticParamReal_c4_set)
    c5 = property(_pw_material.UpmlMagneticParamReal_c5_get, _pw_material.UpmlMagneticParamReal_c5_set)
    c6 = property(_pw_material.UpmlMagneticParamReal_c6_get, _pw_material.UpmlMagneticParamReal_c6_set)
    b = property(_pw_material.UpmlMagneticParamReal_b_get, _pw_material.UpmlMagneticParamReal_b_set)

    def __init__(self):
        _pw_material.UpmlMagneticParamReal_swiginit(self, _pw_material.new_UpmlMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_UpmlMagneticParamReal

# Register UpmlMagneticParamReal in _pw_material:
_pw_material.UpmlMagneticParamReal_swigregister(UpmlMagneticParamReal)

class UpmlElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.UpmlElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.UpmlElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.UpmlElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.UpmlElectricReal_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_UpmlElectricReal

# Register UpmlElectricReal in _pw_material:
_pw_material.UpmlElectricReal_swigregister(UpmlElectricReal)

class UpmlMagneticReal(MaterialMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.UpmlMagneticReal_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.UpmlMagneticReal_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.UpmlMagneticReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.UpmlMagneticReal_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_UpmlMagneticReal

# Register UpmlMagneticReal in _pw_material:
_pw_material.UpmlMagneticReal_swigregister(UpmlMagneticReal)

class UpmlExReal(UpmlElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.UpmlExReal_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.UpmlExReal_swiginit(self, _pw_material.new_UpmlExReal())
    __swig_destroy__ = _pw_material.delete_UpmlExReal

# Register UpmlExReal in _pw_material:
_pw_material.UpmlExReal_swigregister(UpmlExReal)

class UpmlEyReal(UpmlElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.UpmlEyReal_swiginit(self, _pw_material.new_UpmlEyReal())
    __swig_destroy__ = _pw_material.delete_UpmlEyReal

# Register UpmlEyReal in _pw_material:
_pw_material.UpmlEyReal_swigregister(UpmlEyReal)

class UpmlEzReal(UpmlElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.UpmlEzReal_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.UpmlEzReal_swiginit(self, _pw_material.new_UpmlEzReal())
    __swig_destroy__ = _pw_material.delete_UpmlEzReal

# Register UpmlEzReal in _pw_material:
_pw_material.UpmlEzReal_swigregister(UpmlEzReal)

class UpmlHxReal(UpmlMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.UpmlHxReal_swiginit(self, _pw_material.new_UpmlHxReal())
    __swig_destroy__ = _pw_material.delete_UpmlHxReal

# Register UpmlHxReal in _pw_material:
_pw_material.UpmlHxReal_swigregister(UpmlHxReal)

class UpmlHyReal(UpmlMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hy, ex, ez, dz, dx, dt, n):
        return _pw_material.UpmlHyReal_update_all(self, hy, ex, ez, dz, dx, dt, n)

    def __init__(self):
        _pw_material.UpmlHyReal_swiginit(self, _pw_material.new_UpmlHyReal())
    __swig_destroy__ = _pw_material.delete_UpmlHyReal

# Register UpmlHyReal in _pw_material:
_pw_material.UpmlHyReal_swigregister(UpmlHyReal)

class UpmlHzReal(UpmlMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hz, ey, ex, dx, dy, dt, n):
        return _pw_material.UpmlHzReal_update_all(self, hz, ey, ex, dx, dy, dt, n)

    def __init__(self):
        _pw_material.UpmlHzReal_swiginit(self, _pw_material.new_UpmlHzReal())
    __swig_destroy__ = _pw_material.delete_UpmlHzReal

# Register UpmlHzReal in _pw_material:
_pw_material.UpmlHzReal_swigregister(UpmlHzReal)

class CpmlElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    b1 = property(_pw_material.CpmlElectricParamReal_b1_get, _pw_material.CpmlElectricParamReal_b1_set)
    b2 = property(_pw_material.CpmlElectricParamReal_b2_get, _pw_material.CpmlElectricParamReal_b2_set)
    c1 = property(_pw_material.CpmlElectricParamReal_c1_get, _pw_material.CpmlElectricParamReal_c1_set)
    c2 = property(_pw_material.CpmlElectricParamReal_c2_get, _pw_material.CpmlElectricParamReal_c2_set)
    kappa1 = property(_pw_material.CpmlElectricParamReal_kappa1_get, _pw_material.CpmlElectricParamReal_kappa1_set)
    kappa2 = property(_pw_material.CpmlElectricParamReal_kappa2_get, _pw_material.CpmlElectricParamReal_kappa2_set)
    psi1 = property(_pw_material.CpmlElectricParamReal_psi1_get, _pw_material.CpmlElectricParamReal_psi1_set)
    psi2 = property(_pw_material.CpmlElectricParamReal_psi2_get, _pw_material.CpmlElectricParamReal_psi2_set)

    def __init__(self):
        _pw_material.CpmlElectricParamReal_swiginit(self, _pw_material.new_CpmlElectricParamReal())
    __swig_destroy__ = _pw_material.delete_CpmlElectricParamReal

# Register CpmlElectricParamReal in _pw_material:
_pw_material.CpmlElectricParamReal_swigregister(CpmlElectricParamReal)

class CpmlMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    b1 = property(_pw_material.CpmlMagneticParamReal_b1_get, _pw_material.CpmlMagneticParamReal_b1_set)
    b2 = property(_pw_material.CpmlMagneticParamReal_b2_get, _pw_material.CpmlMagneticParamReal_b2_set)
    c1 = property(_pw_material.CpmlMagneticParamReal_c1_get, _pw_material.CpmlMagneticParamReal_c1_set)
    c2 = property(_pw_material.CpmlMagneticParamReal_c2_get, _pw_material.CpmlMagneticParamReal_c2_set)
    kappa1 = property(_pw_material.CpmlMagneticParamReal_kappa1_get, _pw_material.CpmlMagneticParamReal_kappa1_set)
    kappa2 = property(_pw_material.CpmlMagneticParamReal_kappa2_get, _pw_material.CpmlMagneticParamReal_kappa2_set)
    psi1 = property(_pw_material.CpmlMagneticParamReal_psi1_get, _pw_material.CpmlMagneticParamReal_psi1_set)
    psi2 = property(_pw_material.CpmlMagneticParamReal_psi2_get, _pw_material.CpmlMagneticParamReal_psi2_set)

    def __init__(self):
        _pw_material.CpmlMagneticParamReal_swiginit(self, _pw_material.new_CpmlMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_CpmlMagneticParamReal

# Register CpmlMagneticParamReal in _pw_material:
_pw_material.CpmlMagneticParamReal_swigregister(CpmlMagneticParamReal)

class CpmlElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.CpmlElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.CpmlElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.CpmlElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.CpmlElectricReal_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_CpmlElectricReal

# Register CpmlElectricReal in _pw_material:
_pw_material.CpmlElectricReal_swigregister(CpmlElectricReal)

class CpmlMagneticReal(MaterialMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.CpmlMagneticReal_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.CpmlMagneticReal_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.CpmlMagneticReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.CpmlMagneticReal_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_CpmlMagneticReal

# Register CpmlMagneticReal in _pw_material:
_pw_material.CpmlMagneticReal_swigregister(CpmlMagneticReal)

class CpmlExReal(CpmlElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.CpmlExReal_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.CpmlExReal_swiginit(self, _pw_material.new_CpmlExReal())
    __swig_destroy__ = _pw_material.delete_CpmlExReal

# Register CpmlExReal in _pw_material:
_pw_material.CpmlExReal_swigregister(CpmlExReal)

class CpmlEyReal(CpmlElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.CpmlEyReal_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.CpmlEyReal_swiginit(self, _pw_material.new_CpmlEyReal())
    __swig_destroy__ = _pw_material.delete_CpmlEyReal

# Register CpmlEyReal in _pw_material:
_pw_material.CpmlEyReal_swigregister(CpmlEyReal)

class CpmlEzReal(CpmlElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.CpmlEzReal_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.CpmlEzReal_swiginit(self, _pw_material.new_CpmlEzReal())
    __swig_destroy__ = _pw_material.delete_CpmlEzReal

# Register CpmlEzReal in _pw_material:
_pw_material.CpmlEzReal_swigregister(CpmlEzReal)

class CpmlHxReal(CpmlMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hx, ez, ey, dy, dz, dt, n):
        return _pw_material.CpmlHxReal_update_all(self, hx, ez, ey, dy, dz, dt, n)

    def __init__(self):
        _pw_material.CpmlHxReal_swiginit(self, _pw_material.new_CpmlHxReal())
    __swig_destroy__ = _pw_material.delete_CpmlHxReal

# Register CpmlHxReal in _pw_material:
_pw_material.CpmlHxReal_swigregister(CpmlHxReal)

class CpmlHyReal(CpmlMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hy, ex, ez, dz, dx, dt, n):
        return _pw_material.CpmlHyReal_update_all(self, hy, ex, ez, dz, dx, dt, n)

    def __init__(self):
        _pw_material.CpmlHyReal_swiginit(self, _pw_material.new_CpmlHyReal())
    __swig_destroy__ = _pw_material.delete_CpmlHyReal

# Register CpmlHyReal in _pw_material:
_pw_material.CpmlHyReal_swigregister(CpmlHyReal)

class CpmlHzReal(CpmlMagneticReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hz, ey, ex, dx, dy, dt, n):
        return _pw_material.CpmlHzReal_update_all(self, hz, ey, ex, dx, dy, dt, n)

    def __init__(self):
        _pw_material.CpmlHzReal_swiginit(self, _pw_material.new_CpmlHzReal())
    __swig_destroy__ = _pw_material.delete_CpmlHzReal

# Register CpmlHzReal in _pw_material:
_pw_material.CpmlHzReal_swigregister(CpmlHzReal)

class DrudeElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    a = property(_pw_material.DrudeElectricParamReal_a_get, _pw_material.DrudeElectricParamReal_a_set)
    c = property(_pw_material.DrudeElectricParamReal_c_get, _pw_material.DrudeElectricParamReal_c_set)
    q_now = property(_pw_material.DrudeElectricParamReal_q_now_get, _pw_material.DrudeElectricParamReal_q_now_set)
    q_new = property(_pw_material.DrudeElectricParamReal_q_new_get, _pw_material.DrudeElectricParamReal_q_new_set)

    def set(self, a, c):
        return _pw_material.DrudeElectricParamReal_set(self, a, c)

    def __init__(self):
        _pw_material.DrudeElectricParamReal_swiginit(self, _pw_material.new_DrudeElectricParamReal())
    __swig_destroy__ = _pw_material.delete_DrudeElectricParamReal

# Register DrudeElectricParamReal in _pw_material:
_pw_material.DrudeElectricParamReal_swigregister(DrudeElectricParamReal)

class DrudeMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DrudeMagneticParamReal_swiginit(self, _pw_material.new_DrudeMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_DrudeMagneticParamReal

# Register DrudeMagneticParamReal in _pw_material:
_pw_material.DrudeMagneticParamReal_swigregister(DrudeMagneticParamReal)

class DrudeElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DrudeElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DrudeElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DrudeElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DrudeElectricReal_merge(self, pm_ptr)

    def dps_sum(self, init, drude_param):
        return _pw_material.DrudeElectricReal_dps_sum(self, init, drude_param)

    def update_q(self, e_now, drude_param):
        return _pw_material.DrudeElectricReal_update_q(self, e_now, drude_param)
    __swig_destroy__ = _pw_material.delete_DrudeElectricReal

# Register DrudeElectricReal in _pw_material:
_pw_material.DrudeElectricReal_swigregister(DrudeElectricReal)

class DrudeExReal(DrudeElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.DrudeExReal_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DrudeExReal_swiginit(self, _pw_material.new_DrudeExReal())
    __swig_destroy__ = _pw_material.delete_DrudeExReal

# Register DrudeExReal in _pw_material:
_pw_material.DrudeExReal_swigregister(DrudeExReal)

class DrudeEyReal(DrudeElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.DrudeEyReal_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DrudeEyReal_swiginit(self, _pw_material.new_DrudeEyReal())
    __swig_destroy__ = _pw_material.delete_DrudeEyReal

# Register DrudeEyReal in _pw_material:
_pw_material.DrudeEyReal_swigregister(DrudeEyReal)

class DrudeEzReal(DrudeElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.DrudeEzReal_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DrudeEzReal_swiginit(self, _pw_material.new_DrudeEzReal())
    __swig_destroy__ = _pw_material.delete_DrudeEzReal

# Register DrudeEzReal in _pw_material:
_pw_material.DrudeEzReal_swigregister(DrudeEzReal)

class DrudeHxReal(DielectricHxReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DrudeHxReal_name(self)

    def __init__(self):
        _pw_material.DrudeHxReal_swiginit(self, _pw_material.new_DrudeHxReal())
    __swig_destroy__ = _pw_material.delete_DrudeHxReal

# Register DrudeHxReal in _pw_material:
_pw_material.DrudeHxReal_swigregister(DrudeHxReal)

class DrudeHyReal(DielectricHyReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DrudeHyReal_name(self)

    def __init__(self):
        _pw_material.DrudeHyReal_swiginit(self, _pw_material.new_DrudeHyReal())
    __swig_destroy__ = _pw_material.delete_DrudeHyReal

# Register DrudeHyReal in _pw_material:
_pw_material.DrudeHyReal_swigregister(DrudeHyReal)

class DrudeHzReal(DielectricHzReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DrudeHzReal_name(self)

    def __init__(self):
        _pw_material.DrudeHzReal_swiginit(self, _pw_material.new_DrudeHzReal())
    __swig_destroy__ = _pw_material.delete_DrudeHzReal

# Register DrudeHzReal in _pw_material:
_pw_material.DrudeHzReal_swigregister(DrudeHzReal)

class LorentzElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    a = property(_pw_material.LorentzElectricParamReal_a_get, _pw_material.LorentzElectricParamReal_a_set)
    c = property(_pw_material.LorentzElectricParamReal_c_get, _pw_material.LorentzElectricParamReal_c_set)
    l_now = property(_pw_material.LorentzElectricParamReal_l_now_get, _pw_material.LorentzElectricParamReal_l_now_set)
    l_new = property(_pw_material.LorentzElectricParamReal_l_new_get, _pw_material.LorentzElectricParamReal_l_new_set)

    def set(self, a, c):
        return _pw_material.LorentzElectricParamReal_set(self, a, c)

    def __init__(self):
        _pw_material.LorentzElectricParamReal_swiginit(self, _pw_material.new_LorentzElectricParamReal())
    __swig_destroy__ = _pw_material.delete_LorentzElectricParamReal

# Register LorentzElectricParamReal in _pw_material:
_pw_material.LorentzElectricParamReal_swigregister(LorentzElectricParamReal)

class LorentzMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.LorentzMagneticParamReal_swiginit(self, _pw_material.new_LorentzMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_LorentzMagneticParamReal

# Register LorentzMagneticParamReal in _pw_material:
_pw_material.LorentzMagneticParamReal_swigregister(LorentzMagneticParamReal)

class LorentzElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.LorentzElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.LorentzElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.LorentzElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.LorentzElectricReal_merge(self, pm_ptr)

    def lps_sum(self, init, lorentz_param):
        return _pw_material.LorentzElectricReal_lps_sum(self, init, lorentz_param)

    def update_l(self, e_now, lorentz_param):
        return _pw_material.LorentzElectricReal_update_l(self, e_now, lorentz_param)
    __swig_destroy__ = _pw_material.delete_LorentzElectricReal

# Register LorentzElectricReal in _pw_material:
_pw_material.LorentzElectricReal_swigregister(LorentzElectricReal)

class LorentzExReal(LorentzElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.LorentzExReal_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.LorentzExReal_swiginit(self, _pw_material.new_LorentzExReal())
    __swig_destroy__ = _pw_material.delete_LorentzExReal

# Register LorentzExReal in _pw_material:
_pw_material.LorentzExReal_swigregister(LorentzExReal)

class LorentzEyReal(LorentzElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.LorentzEyReal_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.LorentzEyReal_swiginit(self, _pw_material.new_LorentzEyReal())
    __swig_destroy__ = _pw_material.delete_LorentzEyReal

# Register LorentzEyReal in _pw_material:
_pw_material.LorentzEyReal_swigregister(LorentzEyReal)

class LorentzEzReal(LorentzElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.LorentzEzReal_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.LorentzEzReal_swiginit(self, _pw_material.new_LorentzEzReal())
    __swig_destroy__ = _pw_material.delete_LorentzEzReal

# Register LorentzEzReal in _pw_material:
_pw_material.LorentzEzReal_swigregister(LorentzEzReal)

class LorentzHxReal(DielectricHxReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.LorentzHxReal_name(self)

    def __init__(self):
        _pw_material.LorentzHxReal_swiginit(self, _pw_material.new_LorentzHxReal())
    __swig_destroy__ = _pw_material.delete_LorentzHxReal

# Register LorentzHxReal in _pw_material:
_pw_material.LorentzHxReal_swigregister(LorentzHxReal)

class LorentzHyReal(DielectricHyReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.LorentzHyReal_name(self)

    def __init__(self):
        _pw_material.LorentzHyReal_swiginit(self, _pw_material.new_LorentzHyReal())
    __swig_destroy__ = _pw_material.delete_LorentzHyReal

# Register LorentzHyReal in _pw_material:
_pw_material.LorentzHyReal_swigregister(LorentzHyReal)

class LorentzHzReal(DielectricHzReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.LorentzHzReal_name(self)

    def __init__(self):
        _pw_material.LorentzHzReal_swiginit(self, _pw_material.new_LorentzHzReal())
    __swig_destroy__ = _pw_material.delete_LorentzHzReal

# Register LorentzHzReal in _pw_material:
_pw_material.LorentzHzReal_swigregister(LorentzHzReal)

class DcpAdeElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    a = property(_pw_material.DcpAdeElectricParamReal_a_get, _pw_material.DcpAdeElectricParamReal_a_set)
    b = property(_pw_material.DcpAdeElectricParamReal_b_get, _pw_material.DcpAdeElectricParamReal_b_set)
    c = property(_pw_material.DcpAdeElectricParamReal_c_get, _pw_material.DcpAdeElectricParamReal_c_set)
    e_old = property(_pw_material.DcpAdeElectricParamReal_e_old_get, _pw_material.DcpAdeElectricParamReal_e_old_set)
    q_old = property(_pw_material.DcpAdeElectricParamReal_q_old_get, _pw_material.DcpAdeElectricParamReal_q_old_set)
    q_now = property(_pw_material.DcpAdeElectricParamReal_q_now_get, _pw_material.DcpAdeElectricParamReal_q_now_set)
    p_old = property(_pw_material.DcpAdeElectricParamReal_p_old_get, _pw_material.DcpAdeElectricParamReal_p_old_set)
    p_now = property(_pw_material.DcpAdeElectricParamReal_p_now_get, _pw_material.DcpAdeElectricParamReal_p_now_set)

    def set(self, a, b, c):
        return _pw_material.DcpAdeElectricParamReal_set(self, a, b, c)

    def __init__(self):
        _pw_material.DcpAdeElectricParamReal_swiginit(self, _pw_material.new_DcpAdeElectricParamReal())
    __swig_destroy__ = _pw_material.delete_DcpAdeElectricParamReal

# Register DcpAdeElectricParamReal in _pw_material:
_pw_material.DcpAdeElectricParamReal_swigregister(DcpAdeElectricParamReal)

class DcpAdeMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DcpAdeMagneticParamReal_swiginit(self, _pw_material.new_DcpAdeMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_DcpAdeMagneticParamReal

# Register DcpAdeMagneticParamReal in _pw_material:
_pw_material.DcpAdeMagneticParamReal_swigregister(DcpAdeMagneticParamReal)

class DcpAdeElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpAdeElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DcpAdeElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DcpAdeElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DcpAdeElectricReal_merge(self, pm_ptr)

    def dps_sum(self, init, dcp_param):
        return _pw_material.DcpAdeElectricReal_dps_sum(self, init, dcp_param)

    def cps_sum(self, init, dcp_param):
        return _pw_material.DcpAdeElectricReal_cps_sum(self, init, dcp_param)

    def update_q(self, e_old, e_now, e_new, dcp_param):
        return _pw_material.DcpAdeElectricReal_update_q(self, e_old, e_now, e_new, dcp_param)

    def update_p(self, e_old, e_now, e_new, dcp_param):
        return _pw_material.DcpAdeElectricReal_update_p(self, e_old, e_now, e_new, dcp_param)
    __swig_destroy__ = _pw_material.delete_DcpAdeElectricReal

# Register DcpAdeElectricReal in _pw_material:
_pw_material.DcpAdeElectricReal_swigregister(DcpAdeElectricReal)

class DcpAdeExReal(DcpAdeElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.DcpAdeExReal_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DcpAdeExReal_swiginit(self, _pw_material.new_DcpAdeExReal())
    __swig_destroy__ = _pw_material.delete_DcpAdeExReal

# Register DcpAdeExReal in _pw_material:
_pw_material.DcpAdeExReal_swigregister(DcpAdeExReal)

class DcpAdeEyReal(DcpAdeElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.DcpAdeEyReal_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DcpAdeEyReal_swiginit(self, _pw_material.new_DcpAdeEyReal())
    __swig_destroy__ = _pw_material.delete_DcpAdeEyReal

# Register DcpAdeEyReal in _pw_material:
_pw_material.DcpAdeEyReal_swigregister(DcpAdeEyReal)

class DcpAdeEzReal(DcpAdeElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.DcpAdeEzReal_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DcpAdeEzReal_swiginit(self, _pw_material.new_DcpAdeEzReal())
    __swig_destroy__ = _pw_material.delete_DcpAdeEzReal

# Register DcpAdeEzReal in _pw_material:
_pw_material.DcpAdeEzReal_swigregister(DcpAdeEzReal)

class DcpAdeHxReal(DielectricHxReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpAdeHxReal_name(self)

    def __init__(self):
        _pw_material.DcpAdeHxReal_swiginit(self, _pw_material.new_DcpAdeHxReal())
    __swig_destroy__ = _pw_material.delete_DcpAdeHxReal

# Register DcpAdeHxReal in _pw_material:
_pw_material.DcpAdeHxReal_swigregister(DcpAdeHxReal)

class DcpAdeHyReal(DielectricHyReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpAdeHyReal_name(self)

    def __init__(self):
        _pw_material.DcpAdeHyReal_swiginit(self, _pw_material.new_DcpAdeHyReal())
    __swig_destroy__ = _pw_material.delete_DcpAdeHyReal

# Register DcpAdeHyReal in _pw_material:
_pw_material.DcpAdeHyReal_swigregister(DcpAdeHyReal)

class DcpAdeHzReal(DielectricHzReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpAdeHzReal_name(self)

    def __init__(self):
        _pw_material.DcpAdeHzReal_swiginit(self, _pw_material.new_DcpAdeHzReal())
    __swig_destroy__ = _pw_material.delete_DcpAdeHzReal

# Register DcpAdeHzReal in _pw_material:
_pw_material.DcpAdeHzReal_swigregister(DcpAdeHzReal)

class DcpPlrcElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    a = property(_pw_material.DcpPlrcElectricParamReal_a_get, _pw_material.DcpPlrcElectricParamReal_a_set)
    b = property(_pw_material.DcpPlrcElectricParamReal_b_get, _pw_material.DcpPlrcElectricParamReal_b_set)
    c = property(_pw_material.DcpPlrcElectricParamReal_c_get, _pw_material.DcpPlrcElectricParamReal_c_set)
    psi_dp_re = property(_pw_material.DcpPlrcElectricParamReal_psi_dp_re_get, _pw_material.DcpPlrcElectricParamReal_psi_dp_re_set)
    psi_dp_im = property(_pw_material.DcpPlrcElectricParamReal_psi_dp_im_get, _pw_material.DcpPlrcElectricParamReal_psi_dp_im_set)
    psi_cp_re = property(_pw_material.DcpPlrcElectricParamReal_psi_cp_re_get, _pw_material.DcpPlrcElectricParamReal_psi_cp_re_set)
    psi_cp_im = property(_pw_material.DcpPlrcElectricParamReal_psi_cp_im_get, _pw_material.DcpPlrcElectricParamReal_psi_cp_im_set)

    def set(self, a, b, c):
        return _pw_material.DcpPlrcElectricParamReal_set(self, a, b, c)

    def __init__(self):
        _pw_material.DcpPlrcElectricParamReal_swiginit(self, _pw_material.new_DcpPlrcElectricParamReal())
    __swig_destroy__ = _pw_material.delete_DcpPlrcElectricParamReal

# Register DcpPlrcElectricParamReal in _pw_material:
_pw_material.DcpPlrcElectricParamReal_swigregister(DcpPlrcElectricParamReal)

class DcpPlrcMagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DcpPlrcMagneticParamReal_swiginit(self, _pw_material.new_DcpPlrcMagneticParamReal())
    __swig_destroy__ = _pw_material.delete_DcpPlrcMagneticParamReal

# Register DcpPlrcMagneticParamReal in _pw_material:
_pw_material.DcpPlrcMagneticParamReal_swigregister(DcpPlrcMagneticParamReal)

class DcpPlrcElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpPlrcElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DcpPlrcElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DcpPlrcElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DcpPlrcElectricReal_merge(self, pm_ptr)

    def update_psi_dp(self, e_now, e_new, dcp_param):
        return _pw_material.DcpPlrcElectricReal_update_psi_dp(self, e_now, e_new, dcp_param)

    def update_psi_cp(self, e_now, e_new, dcp_param):
        return _pw_material.DcpPlrcElectricReal_update_psi_cp(self, e_now, e_new, dcp_param)

    def psi_total(self, dcp_param):
        return _pw_material.DcpPlrcElectricReal_psi_total(self, dcp_param)
    __swig_destroy__ = _pw_material.delete_DcpPlrcElectricReal

# Register DcpPlrcElectricReal in _pw_material:
_pw_material.DcpPlrcElectricReal_swigregister(DcpPlrcElectricReal)

class DcpPlrcExReal(DcpPlrcElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.DcpPlrcExReal_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DcpPlrcExReal_swiginit(self, _pw_material.new_DcpPlrcExReal())
    __swig_destroy__ = _pw_material.delete_DcpPlrcExReal

# Register DcpPlrcExReal in _pw_material:
_pw_material.DcpPlrcExReal_swigregister(DcpPlrcExReal)

class DcpPlrcEyReal(DcpPlrcElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.DcpPlrcEyReal_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DcpPlrcEyReal_swiginit(self, _pw_material.new_DcpPlrcEyReal())
    __swig_destroy__ = _pw_material.delete_DcpPlrcEyReal

# Register DcpPlrcEyReal in _pw_material:
_pw_material.DcpPlrcEyReal_swigregister(DcpPlrcEyReal)

class DcpPlrcEzReal(DcpPlrcElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.DcpPlrcEzReal_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DcpPlrcEzReal_swiginit(self, _pw_material.new_DcpPlrcEzReal())
    __swig_destroy__ = _pw_material.delete_DcpPlrcEzReal

# Register DcpPlrcEzReal in _pw_material:
_pw_material.DcpPlrcEzReal_swigregister(DcpPlrcEzReal)

class DcpPlrcHxReal(DielectricHxReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpPlrcHxReal_name(self)

    def __init__(self):
        _pw_material.DcpPlrcHxReal_swiginit(self, _pw_material.new_DcpPlrcHxReal())
    __swig_destroy__ = _pw_material.delete_DcpPlrcHxReal

# Register DcpPlrcHxReal in _pw_material:
_pw_material.DcpPlrcHxReal_swigregister(DcpPlrcHxReal)

class DcpPlrcHyReal(DielectricHyReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpPlrcHyReal_name(self)

    def __init__(self):
        _pw_material.DcpPlrcHyReal_swiginit(self, _pw_material.new_DcpPlrcHyReal())
    __swig_destroy__ = _pw_material.delete_DcpPlrcHyReal

# Register DcpPlrcHyReal in _pw_material:
_pw_material.DcpPlrcHyReal_swigregister(DcpPlrcHyReal)

class DcpPlrcHzReal(DielectricHzReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpPlrcHzReal_name(self)

    def __init__(self):
        _pw_material.DcpPlrcHzReal_swiginit(self, _pw_material.new_DcpPlrcHzReal())
    __swig_destroy__ = _pw_material.delete_DcpPlrcHzReal

# Register DcpPlrcHzReal in _pw_material:
_pw_material.DcpPlrcHzReal_swigregister(DcpPlrcHzReal)

class ElectricParamCmplx(PwMaterialParam):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    eps_inf = property(_pw_material.ElectricParamCmplx_eps_inf_get, _pw_material.ElectricParamCmplx_eps_inf_set)

    def __init__(self):
        _pw_material.ElectricParamCmplx_swiginit(self, _pw_material.new_ElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_ElectricParamCmplx

# Register ElectricParamCmplx in _pw_material:
_pw_material.ElectricParamCmplx_swigregister(ElectricParamCmplx)

class MagneticParamCmplx(PwMaterialParam):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mu_inf = property(_pw_material.MagneticParamCmplx_mu_inf_get, _pw_material.MagneticParamCmplx_mu_inf_set)

    def __init__(self):
        _pw_material.MagneticParamCmplx_swiginit(self, _pw_material.new_MagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_MagneticParamCmplx

# Register MagneticParamCmplx in _pw_material:
_pw_material.MagneticParamCmplx_swigregister(MagneticParamCmplx)

class PwMaterialCmplx(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pw_material.delete_PwMaterialCmplx

    def name(self):
        return _pw_material.PwMaterialCmplx_name(self)

    def attach(self, idx, parameter):
        return _pw_material.PwMaterialCmplx_attach(self, idx, parameter)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.PwMaterialCmplx_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def find(self, idx):
        return _pw_material.PwMaterialCmplx_find(self, idx)

    def merge(self, pm):
        return _pw_material.PwMaterialCmplx_merge(self, pm)

    def idx_size(self):
        return _pw_material.PwMaterialCmplx_idx_size(self)

# Register PwMaterialCmplx in _pw_material:
_pw_material.PwMaterialCmplx_swigregister(PwMaterialCmplx)

class MaterialElectricCmplx(PwMaterialCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def get_eps_inf(self, idx):
        return _pw_material.MaterialElectricCmplx_get_eps_inf(self, idx)

    def find(self, idx):
        return _pw_material.MaterialElectricCmplx_find(self, idx)
    __swig_destroy__ = _pw_material.delete_MaterialElectricCmplx

# Register MaterialElectricCmplx in _pw_material:
_pw_material.MaterialElectricCmplx_swigregister(MaterialElectricCmplx)

class MaterialMagneticCmplx(PwMaterialCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def get_mu_inf(self, idx):
        return _pw_material.MaterialMagneticCmplx_get_mu_inf(self, idx)

    def find(self, idx):
        return _pw_material.MaterialMagneticCmplx_find(self, idx)
    __swig_destroy__ = _pw_material.delete_MaterialMagneticCmplx

# Register MaterialMagneticCmplx in _pw_material:
_pw_material.MaterialMagneticCmplx_swigregister(MaterialMagneticCmplx)

class DummyElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyElectricParamCmplx_swiginit(self, _pw_material.new_DummyElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_DummyElectricParamCmplx

# Register DummyElectricParamCmplx in _pw_material:
_pw_material.DummyElectricParamCmplx_swigregister(DummyElectricParamCmplx)

class DummyMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyMagneticParamCmplx_swiginit(self, _pw_material.new_DummyMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_DummyMagneticParamCmplx

# Register DummyMagneticParamCmplx in _pw_material:
_pw_material.DummyMagneticParamCmplx_swigregister(DummyMagneticParamCmplx)

class DummyElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DummyElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DummyElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DummyElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DummyElectricCmplx_merge(self, pm_ptr)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.DummyElectricCmplx_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def __init__(self):
        _pw_material.DummyElectricCmplx_swiginit(self, _pw_material.new_DummyElectricCmplx())
    __swig_destroy__ = _pw_material.delete_DummyElectricCmplx

# Register DummyElectricCmplx in _pw_material:
_pw_material.DummyElectricCmplx_swigregister(DummyElectricCmplx)

class DummyMagneticCmplx(MaterialMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DummyMagneticCmplx_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.DummyMagneticCmplx_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DummyMagneticCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DummyMagneticCmplx_merge(self, pm_ptr)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.DummyMagneticCmplx_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def __init__(self):
        _pw_material.DummyMagneticCmplx_swiginit(self, _pw_material.new_DummyMagneticCmplx())
    __swig_destroy__ = _pw_material.delete_DummyMagneticCmplx

# Register DummyMagneticCmplx in _pw_material:
_pw_material.DummyMagneticCmplx_swigregister(DummyMagneticCmplx)

class DummyExCmplx(DummyElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyExCmplx_swiginit(self, _pw_material.new_DummyExCmplx())
    __swig_destroy__ = _pw_material.delete_DummyExCmplx

# Register DummyExCmplx in _pw_material:
_pw_material.DummyExCmplx_swigregister(DummyExCmplx)

class DummyEyCmplx(DummyElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyEyCmplx_swiginit(self, _pw_material.new_DummyEyCmplx())
    __swig_destroy__ = _pw_material.delete_DummyEyCmplx

# Register DummyEyCmplx in _pw_material:
_pw_material.DummyEyCmplx_swigregister(DummyEyCmplx)

class DummyEzCmplx(DummyElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyEzCmplx_swiginit(self, _pw_material.new_DummyEzCmplx())
    __swig_destroy__ = _pw_material.delete_DummyEzCmplx

# Register DummyEzCmplx in _pw_material:
_pw_material.DummyEzCmplx_swigregister(DummyEzCmplx)

class DummyHxCmplx(DummyMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyHxCmplx_swiginit(self, _pw_material.new_DummyHxCmplx())
    __swig_destroy__ = _pw_material.delete_DummyHxCmplx

# Register DummyHxCmplx in _pw_material:
_pw_material.DummyHxCmplx_swigregister(DummyHxCmplx)

class DummyHyCmplx(DummyMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyHyCmplx_swiginit(self, _pw_material.new_DummyHyCmplx())
    __swig_destroy__ = _pw_material.delete_DummyHyCmplx

# Register DummyHyCmplx in _pw_material:
_pw_material.DummyHyCmplx_swigregister(DummyHyCmplx)

class DummyHzCmplx(DummyMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DummyHzCmplx_swiginit(self, _pw_material.new_DummyHzCmplx())
    __swig_destroy__ = _pw_material.delete_DummyHzCmplx

# Register DummyHzCmplx in _pw_material:
_pw_material.DummyHzCmplx_swigregister(DummyHzCmplx)

class ConstElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    value = property(_pw_material.ConstElectricParamCmplx_value_get, _pw_material.ConstElectricParamCmplx_value_set)

    def __init__(self):
        _pw_material.ConstElectricParamCmplx_swiginit(self, _pw_material.new_ConstElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_ConstElectricParamCmplx

# Register ConstElectricParamCmplx in _pw_material:
_pw_material.ConstElectricParamCmplx_swigregister(ConstElectricParamCmplx)

class ConstMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    value = property(_pw_material.ConstMagneticParamCmplx_value_get, _pw_material.ConstMagneticParamCmplx_value_set)

    def __init__(self):
        _pw_material.ConstMagneticParamCmplx_swiginit(self, _pw_material.new_ConstMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_ConstMagneticParamCmplx

# Register ConstMagneticParamCmplx in _pw_material:
_pw_material.ConstMagneticParamCmplx_swigregister(ConstMagneticParamCmplx)

class ConstElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.ConstElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.ConstElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.ConstElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.ConstElectricCmplx_merge(self, pm_ptr)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.ConstElectricCmplx_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def __init__(self):
        _pw_material.ConstElectricCmplx_swiginit(self, _pw_material.new_ConstElectricCmplx())
    __swig_destroy__ = _pw_material.delete_ConstElectricCmplx

# Register ConstElectricCmplx in _pw_material:
_pw_material.ConstElectricCmplx_swigregister(ConstElectricCmplx)

class ConstMagneticCmplx(MaterialMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.ConstMagneticCmplx_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.ConstMagneticCmplx_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.ConstMagneticCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.ConstMagneticCmplx_merge(self, pm_ptr)

    def update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n):
        return _pw_material.ConstMagneticCmplx_update_all(self, inplace_field, in_field1, in_field2, d1, d2, dt, n)

    def __init__(self):
        _pw_material.ConstMagneticCmplx_swiginit(self, _pw_material.new_ConstMagneticCmplx())
    __swig_destroy__ = _pw_material.delete_ConstMagneticCmplx

# Register ConstMagneticCmplx in _pw_material:
_pw_material.ConstMagneticCmplx_swigregister(ConstMagneticCmplx)

class ConstExCmplx(ConstElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstExCmplx_swiginit(self, _pw_material.new_ConstExCmplx())
    __swig_destroy__ = _pw_material.delete_ConstExCmplx

# Register ConstExCmplx in _pw_material:
_pw_material.ConstExCmplx_swigregister(ConstExCmplx)

class ConstEyCmplx(ConstElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstEyCmplx_swiginit(self, _pw_material.new_ConstEyCmplx())
    __swig_destroy__ = _pw_material.delete_ConstEyCmplx

# Register ConstEyCmplx in _pw_material:
_pw_material.ConstEyCmplx_swigregister(ConstEyCmplx)

class ConstEzCmplx(ConstElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstEzCmplx_swiginit(self, _pw_material.new_ConstEzCmplx())
    __swig_destroy__ = _pw_material.delete_ConstEzCmplx

# Register ConstEzCmplx in _pw_material:
_pw_material.ConstEzCmplx_swigregister(ConstEzCmplx)

class ConstHxCmplx(ConstMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstHxCmplx_swiginit(self, _pw_material.new_ConstHxCmplx())
    __swig_destroy__ = _pw_material.delete_ConstHxCmplx

# Register ConstHxCmplx in _pw_material:
_pw_material.ConstHxCmplx_swigregister(ConstHxCmplx)

class ConstHyCmplx(ConstMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstHyCmplx_swiginit(self, _pw_material.new_ConstHyCmplx())
    __swig_destroy__ = _pw_material.delete_ConstHyCmplx

# Register ConstHyCmplx in _pw_material:
_pw_material.ConstHyCmplx_swigregister(ConstHyCmplx)

class ConstHzCmplx(ConstMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.ConstHzCmplx_swiginit(self, _pw_material.new_ConstHzCmplx())
    __swig_destroy__ = _pw_material.delete_ConstHzCmplx

# Register ConstHzCmplx in _pw_material:
_pw_material.ConstHzCmplx_swigregister(ConstHzCmplx)

class DielectricElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DielectricElectricParamCmplx_swiginit(self, _pw_material.new_DielectricElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_DielectricElectricParamCmplx

# Register DielectricElectricParamCmplx in _pw_material:
_pw_material.DielectricElectricParamCmplx_swigregister(DielectricElectricParamCmplx)

class DielectricMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DielectricMagneticParamCmplx_swiginit(self, _pw_material.new_DielectricMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_DielectricMagneticParamCmplx

# Register DielectricMagneticParamCmplx in _pw_material:
_pw_material.DielectricMagneticParamCmplx_swigregister(DielectricMagneticParamCmplx)

class DielectricElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DielectricElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DielectricElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DielectricElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DielectricElectricCmplx_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_DielectricElectricCmplx

# Register DielectricElectricCmplx in _pw_material:
_pw_material.DielectricElectricCmplx_swigregister(DielectricElectricCmplx)

class DielectricMagneticCmplx(MaterialMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DielectricMagneticCmplx_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.DielectricMagneticCmplx_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DielectricMagneticCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DielectricMagneticCmplx_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_DielectricMagneticCmplx

# Register DielectricMagneticCmplx in _pw_material:
_pw_material.DielectricMagneticCmplx_swigregister(DielectricMagneticCmplx)

class DielectricExCmplx(DielectricElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.DielectricExCmplx_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DielectricExCmplx_swiginit(self, _pw_material.new_DielectricExCmplx())
    __swig_destroy__ = _pw_material.delete_DielectricExCmplx

# Register DielectricExCmplx in _pw_material:
_pw_material.DielectricExCmplx_swigregister(DielectricExCmplx)

class DielectricEyCmplx(DielectricElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.DielectricEyCmplx_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DielectricEyCmplx_swiginit(self, _pw_material.new_DielectricEyCmplx())
    __swig_destroy__ = _pw_material.delete_DielectricEyCmplx

# Register DielectricEyCmplx in _pw_material:
_pw_material.DielectricEyCmplx_swigregister(DielectricEyCmplx)

class DielectricEzCmplx(DielectricElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.DielectricEzCmplx_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DielectricEzCmplx_swiginit(self, _pw_material.new_DielectricEzCmplx())
    __swig_destroy__ = _pw_material.delete_DielectricEzCmplx

# Register DielectricEzCmplx in _pw_material:
_pw_material.DielectricEzCmplx_swigregister(DielectricEzCmplx)

class DielectricHxCmplx(DielectricMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hx, ez, ey, dy, dz, dt, n):
        return _pw_material.DielectricHxCmplx_update_all(self, hx, ez, ey, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DielectricHxCmplx_swiginit(self, _pw_material.new_DielectricHxCmplx())
    __swig_destroy__ = _pw_material.delete_DielectricHxCmplx

# Register DielectricHxCmplx in _pw_material:
_pw_material.DielectricHxCmplx_swigregister(DielectricHxCmplx)

class DielectricHyCmplx(DielectricMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hy, ex, ez, dz, dx, dt, n):
        return _pw_material.DielectricHyCmplx_update_all(self, hy, ex, ez, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DielectricHyCmplx_swiginit(self, _pw_material.new_DielectricHyCmplx())
    __swig_destroy__ = _pw_material.delete_DielectricHyCmplx

# Register DielectricHyCmplx in _pw_material:
_pw_material.DielectricHyCmplx_swigregister(DielectricHyCmplx)

class DielectricHzCmplx(DielectricMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hz, ey, ex, dx, dy, dt, n):
        return _pw_material.DielectricHzCmplx_update_all(self, hz, ey, ex, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DielectricHzCmplx_swiginit(self, _pw_material.new_DielectricHzCmplx())
    __swig_destroy__ = _pw_material.delete_DielectricHzCmplx

# Register DielectricHzCmplx in _pw_material:
_pw_material.DielectricHzCmplx_swigregister(DielectricHzCmplx)

class UpmlElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    c1 = property(_pw_material.UpmlElectricParamCmplx_c1_get, _pw_material.UpmlElectricParamCmplx_c1_set)
    c2 = property(_pw_material.UpmlElectricParamCmplx_c2_get, _pw_material.UpmlElectricParamCmplx_c2_set)
    c3 = property(_pw_material.UpmlElectricParamCmplx_c3_get, _pw_material.UpmlElectricParamCmplx_c3_set)
    c4 = property(_pw_material.UpmlElectricParamCmplx_c4_get, _pw_material.UpmlElectricParamCmplx_c4_set)
    c5 = property(_pw_material.UpmlElectricParamCmplx_c5_get, _pw_material.UpmlElectricParamCmplx_c5_set)
    c6 = property(_pw_material.UpmlElectricParamCmplx_c6_get, _pw_material.UpmlElectricParamCmplx_c6_set)
    d = property(_pw_material.UpmlElectricParamCmplx_d_get, _pw_material.UpmlElectricParamCmplx_d_set)

    def __init__(self):
        _pw_material.UpmlElectricParamCmplx_swiginit(self, _pw_material.new_UpmlElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_UpmlElectricParamCmplx

# Register UpmlElectricParamCmplx in _pw_material:
_pw_material.UpmlElectricParamCmplx_swigregister(UpmlElectricParamCmplx)

class UpmlMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    c1 = property(_pw_material.UpmlMagneticParamCmplx_c1_get, _pw_material.UpmlMagneticParamCmplx_c1_set)
    c2 = property(_pw_material.UpmlMagneticParamCmplx_c2_get, _pw_material.UpmlMagneticParamCmplx_c2_set)
    c3 = property(_pw_material.UpmlMagneticParamCmplx_c3_get, _pw_material.UpmlMagneticParamCmplx_c3_set)
    c4 = property(_pw_material.UpmlMagneticParamCmplx_c4_get, _pw_material.UpmlMagneticParamCmplx_c4_set)
    c5 = property(_pw_material.UpmlMagneticParamCmplx_c5_get, _pw_material.UpmlMagneticParamCmplx_c5_set)
    c6 = property(_pw_material.UpmlMagneticParamCmplx_c6_get, _pw_material.UpmlMagneticParamCmplx_c6_set)
    b = property(_pw_material.UpmlMagneticParamCmplx_b_get, _pw_material.UpmlMagneticParamCmplx_b_set)

    def __init__(self):
        _pw_material.UpmlMagneticParamCmplx_swiginit(self, _pw_material.new_UpmlMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_UpmlMagneticParamCmplx

# Register UpmlMagneticParamCmplx in _pw_material:
_pw_material.UpmlMagneticParamCmplx_swigregister(UpmlMagneticParamCmplx)

class UpmlElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.UpmlElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.UpmlElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.UpmlElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.UpmlElectricCmplx_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_UpmlElectricCmplx

# Register UpmlElectricCmplx in _pw_material:
_pw_material.UpmlElectricCmplx_swigregister(UpmlElectricCmplx)

class UpmlMagneticCmplx(MaterialMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.UpmlMagneticCmplx_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.UpmlMagneticCmplx_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.UpmlMagneticCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.UpmlMagneticCmplx_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_UpmlMagneticCmplx

# Register UpmlMagneticCmplx in _pw_material:
_pw_material.UpmlMagneticCmplx_swigregister(UpmlMagneticCmplx)

class UpmlExCmplx(UpmlElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.UpmlExCmplx_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.UpmlExCmplx_swiginit(self, _pw_material.new_UpmlExCmplx())
    __swig_destroy__ = _pw_material.delete_UpmlExCmplx

# Register UpmlExCmplx in _pw_material:
_pw_material.UpmlExCmplx_swigregister(UpmlExCmplx)

class UpmlEyCmplx(UpmlElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.UpmlEyCmplx_swiginit(self, _pw_material.new_UpmlEyCmplx())
    __swig_destroy__ = _pw_material.delete_UpmlEyCmplx

# Register UpmlEyCmplx in _pw_material:
_pw_material.UpmlEyCmplx_swigregister(UpmlEyCmplx)

class UpmlEzCmplx(UpmlElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.UpmlEzCmplx_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.UpmlEzCmplx_swiginit(self, _pw_material.new_UpmlEzCmplx())
    __swig_destroy__ = _pw_material.delete_UpmlEzCmplx

# Register UpmlEzCmplx in _pw_material:
_pw_material.UpmlEzCmplx_swigregister(UpmlEzCmplx)

class UpmlHxCmplx(UpmlMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.UpmlHxCmplx_swiginit(self, _pw_material.new_UpmlHxCmplx())
    __swig_destroy__ = _pw_material.delete_UpmlHxCmplx

# Register UpmlHxCmplx in _pw_material:
_pw_material.UpmlHxCmplx_swigregister(UpmlHxCmplx)

class UpmlHyCmplx(UpmlMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hy, ex, ez, dz, dx, dt, n):
        return _pw_material.UpmlHyCmplx_update_all(self, hy, ex, ez, dz, dx, dt, n)

    def __init__(self):
        _pw_material.UpmlHyCmplx_swiginit(self, _pw_material.new_UpmlHyCmplx())
    __swig_destroy__ = _pw_material.delete_UpmlHyCmplx

# Register UpmlHyCmplx in _pw_material:
_pw_material.UpmlHyCmplx_swigregister(UpmlHyCmplx)

class UpmlHzCmplx(UpmlMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hz, ey, ex, dx, dy, dt, n):
        return _pw_material.UpmlHzCmplx_update_all(self, hz, ey, ex, dx, dy, dt, n)

    def __init__(self):
        _pw_material.UpmlHzCmplx_swiginit(self, _pw_material.new_UpmlHzCmplx())
    __swig_destroy__ = _pw_material.delete_UpmlHzCmplx

# Register UpmlHzCmplx in _pw_material:
_pw_material.UpmlHzCmplx_swigregister(UpmlHzCmplx)

class CpmlElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    b1 = property(_pw_material.CpmlElectricParamCmplx_b1_get, _pw_material.CpmlElectricParamCmplx_b1_set)
    b2 = property(_pw_material.CpmlElectricParamCmplx_b2_get, _pw_material.CpmlElectricParamCmplx_b2_set)
    c1 = property(_pw_material.CpmlElectricParamCmplx_c1_get, _pw_material.CpmlElectricParamCmplx_c1_set)
    c2 = property(_pw_material.CpmlElectricParamCmplx_c2_get, _pw_material.CpmlElectricParamCmplx_c2_set)
    kappa1 = property(_pw_material.CpmlElectricParamCmplx_kappa1_get, _pw_material.CpmlElectricParamCmplx_kappa1_set)
    kappa2 = property(_pw_material.CpmlElectricParamCmplx_kappa2_get, _pw_material.CpmlElectricParamCmplx_kappa2_set)
    psi1 = property(_pw_material.CpmlElectricParamCmplx_psi1_get, _pw_material.CpmlElectricParamCmplx_psi1_set)
    psi2 = property(_pw_material.CpmlElectricParamCmplx_psi2_get, _pw_material.CpmlElectricParamCmplx_psi2_set)

    def __init__(self):
        _pw_material.CpmlElectricParamCmplx_swiginit(self, _pw_material.new_CpmlElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_CpmlElectricParamCmplx

# Register CpmlElectricParamCmplx in _pw_material:
_pw_material.CpmlElectricParamCmplx_swigregister(CpmlElectricParamCmplx)

class CpmlMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    b1 = property(_pw_material.CpmlMagneticParamCmplx_b1_get, _pw_material.CpmlMagneticParamCmplx_b1_set)
    b2 = property(_pw_material.CpmlMagneticParamCmplx_b2_get, _pw_material.CpmlMagneticParamCmplx_b2_set)
    c1 = property(_pw_material.CpmlMagneticParamCmplx_c1_get, _pw_material.CpmlMagneticParamCmplx_c1_set)
    c2 = property(_pw_material.CpmlMagneticParamCmplx_c2_get, _pw_material.CpmlMagneticParamCmplx_c2_set)
    kappa1 = property(_pw_material.CpmlMagneticParamCmplx_kappa1_get, _pw_material.CpmlMagneticParamCmplx_kappa1_set)
    kappa2 = property(_pw_material.CpmlMagneticParamCmplx_kappa2_get, _pw_material.CpmlMagneticParamCmplx_kappa2_set)
    psi1 = property(_pw_material.CpmlMagneticParamCmplx_psi1_get, _pw_material.CpmlMagneticParamCmplx_psi1_set)
    psi2 = property(_pw_material.CpmlMagneticParamCmplx_psi2_get, _pw_material.CpmlMagneticParamCmplx_psi2_set)

    def __init__(self):
        _pw_material.CpmlMagneticParamCmplx_swiginit(self, _pw_material.new_CpmlMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_CpmlMagneticParamCmplx

# Register CpmlMagneticParamCmplx in _pw_material:
_pw_material.CpmlMagneticParamCmplx_swigregister(CpmlMagneticParamCmplx)

class CpmlElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.CpmlElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.CpmlElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.CpmlElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.CpmlElectricCmplx_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_CpmlElectricCmplx

# Register CpmlElectricCmplx in _pw_material:
_pw_material.CpmlElectricCmplx_swigregister(CpmlElectricCmplx)

class CpmlMagneticCmplx(MaterialMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.CpmlMagneticCmplx_name(self)

    def get_mu_inf(self, idx):
        return _pw_material.CpmlMagneticCmplx_get_mu_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.CpmlMagneticCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.CpmlMagneticCmplx_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_CpmlMagneticCmplx

# Register CpmlMagneticCmplx in _pw_material:
_pw_material.CpmlMagneticCmplx_swigregister(CpmlMagneticCmplx)

class CpmlExCmplx(CpmlElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.CpmlExCmplx_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.CpmlExCmplx_swiginit(self, _pw_material.new_CpmlExCmplx())
    __swig_destroy__ = _pw_material.delete_CpmlExCmplx

# Register CpmlExCmplx in _pw_material:
_pw_material.CpmlExCmplx_swigregister(CpmlExCmplx)

class CpmlEyCmplx(CpmlElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.CpmlEyCmplx_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.CpmlEyCmplx_swiginit(self, _pw_material.new_CpmlEyCmplx())
    __swig_destroy__ = _pw_material.delete_CpmlEyCmplx

# Register CpmlEyCmplx in _pw_material:
_pw_material.CpmlEyCmplx_swigregister(CpmlEyCmplx)

class CpmlEzCmplx(CpmlElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.CpmlEzCmplx_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.CpmlEzCmplx_swiginit(self, _pw_material.new_CpmlEzCmplx())
    __swig_destroy__ = _pw_material.delete_CpmlEzCmplx

# Register CpmlEzCmplx in _pw_material:
_pw_material.CpmlEzCmplx_swigregister(CpmlEzCmplx)

class CpmlHxCmplx(CpmlMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hx, ez, ey, dy, dz, dt, n):
        return _pw_material.CpmlHxCmplx_update_all(self, hx, ez, ey, dy, dz, dt, n)

    def __init__(self):
        _pw_material.CpmlHxCmplx_swiginit(self, _pw_material.new_CpmlHxCmplx())
    __swig_destroy__ = _pw_material.delete_CpmlHxCmplx

# Register CpmlHxCmplx in _pw_material:
_pw_material.CpmlHxCmplx_swigregister(CpmlHxCmplx)

class CpmlHyCmplx(CpmlMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hy, ex, ez, dz, dx, dt, n):
        return _pw_material.CpmlHyCmplx_update_all(self, hy, ex, ez, dz, dx, dt, n)

    def __init__(self):
        _pw_material.CpmlHyCmplx_swiginit(self, _pw_material.new_CpmlHyCmplx())
    __swig_destroy__ = _pw_material.delete_CpmlHyCmplx

# Register CpmlHyCmplx in _pw_material:
_pw_material.CpmlHyCmplx_swigregister(CpmlHyCmplx)

class CpmlHzCmplx(CpmlMagneticCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hz, ey, ex, dx, dy, dt, n):
        return _pw_material.CpmlHzCmplx_update_all(self, hz, ey, ex, dx, dy, dt, n)

    def __init__(self):
        _pw_material.CpmlHzCmplx_swiginit(self, _pw_material.new_CpmlHzCmplx())
    __swig_destroy__ = _pw_material.delete_CpmlHzCmplx

# Register CpmlHzCmplx in _pw_material:
_pw_material.CpmlHzCmplx_swigregister(CpmlHzCmplx)

class DrudeElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    a = property(_pw_material.DrudeElectricParamCmplx_a_get, _pw_material.DrudeElectricParamCmplx_a_set)
    c = property(_pw_material.DrudeElectricParamCmplx_c_get, _pw_material.DrudeElectricParamCmplx_c_set)
    q_now = property(_pw_material.DrudeElectricParamCmplx_q_now_get, _pw_material.DrudeElectricParamCmplx_q_now_set)
    q_new = property(_pw_material.DrudeElectricParamCmplx_q_new_get, _pw_material.DrudeElectricParamCmplx_q_new_set)

    def set(self, a, c):
        return _pw_material.DrudeElectricParamCmplx_set(self, a, c)

    def __init__(self):
        _pw_material.DrudeElectricParamCmplx_swiginit(self, _pw_material.new_DrudeElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_DrudeElectricParamCmplx

# Register DrudeElectricParamCmplx in _pw_material:
_pw_material.DrudeElectricParamCmplx_swigregister(DrudeElectricParamCmplx)

class DrudeMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DrudeMagneticParamCmplx_swiginit(self, _pw_material.new_DrudeMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_DrudeMagneticParamCmplx

# Register DrudeMagneticParamCmplx in _pw_material:
_pw_material.DrudeMagneticParamCmplx_swigregister(DrudeMagneticParamCmplx)

class DrudeElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DrudeElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DrudeElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DrudeElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DrudeElectricCmplx_merge(self, pm_ptr)

    def dps_sum(self, init, drude_param):
        return _pw_material.DrudeElectricCmplx_dps_sum(self, init, drude_param)

    def update_q(self, e_now, drude_param):
        return _pw_material.DrudeElectricCmplx_update_q(self, e_now, drude_param)
    __swig_destroy__ = _pw_material.delete_DrudeElectricCmplx

# Register DrudeElectricCmplx in _pw_material:
_pw_material.DrudeElectricCmplx_swigregister(DrudeElectricCmplx)

class DrudeExCmplx(DrudeElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.DrudeExCmplx_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DrudeExCmplx_swiginit(self, _pw_material.new_DrudeExCmplx())
    __swig_destroy__ = _pw_material.delete_DrudeExCmplx

# Register DrudeExCmplx in _pw_material:
_pw_material.DrudeExCmplx_swigregister(DrudeExCmplx)

class DrudeEyCmplx(DrudeElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.DrudeEyCmplx_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DrudeEyCmplx_swiginit(self, _pw_material.new_DrudeEyCmplx())
    __swig_destroy__ = _pw_material.delete_DrudeEyCmplx

# Register DrudeEyCmplx in _pw_material:
_pw_material.DrudeEyCmplx_swigregister(DrudeEyCmplx)

class DrudeEzCmplx(DrudeElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.DrudeEzCmplx_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DrudeEzCmplx_swiginit(self, _pw_material.new_DrudeEzCmplx())
    __swig_destroy__ = _pw_material.delete_DrudeEzCmplx

# Register DrudeEzCmplx in _pw_material:
_pw_material.DrudeEzCmplx_swigregister(DrudeEzCmplx)

class DrudeHxCmplx(DielectricHxCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DrudeHxCmplx_name(self)

    def __init__(self):
        _pw_material.DrudeHxCmplx_swiginit(self, _pw_material.new_DrudeHxCmplx())
    __swig_destroy__ = _pw_material.delete_DrudeHxCmplx

# Register DrudeHxCmplx in _pw_material:
_pw_material.DrudeHxCmplx_swigregister(DrudeHxCmplx)

class DrudeHyCmplx(DielectricHyCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DrudeHyCmplx_name(self)

    def __init__(self):
        _pw_material.DrudeHyCmplx_swiginit(self, _pw_material.new_DrudeHyCmplx())
    __swig_destroy__ = _pw_material.delete_DrudeHyCmplx

# Register DrudeHyCmplx in _pw_material:
_pw_material.DrudeHyCmplx_swigregister(DrudeHyCmplx)

class DrudeHzCmplx(DielectricHzCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DrudeHzCmplx_name(self)

    def __init__(self):
        _pw_material.DrudeHzCmplx_swiginit(self, _pw_material.new_DrudeHzCmplx())
    __swig_destroy__ = _pw_material.delete_DrudeHzCmplx

# Register DrudeHzCmplx in _pw_material:
_pw_material.DrudeHzCmplx_swigregister(DrudeHzCmplx)

class LorentzElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    a = property(_pw_material.LorentzElectricParamCmplx_a_get, _pw_material.LorentzElectricParamCmplx_a_set)
    c = property(_pw_material.LorentzElectricParamCmplx_c_get, _pw_material.LorentzElectricParamCmplx_c_set)
    l_now = property(_pw_material.LorentzElectricParamCmplx_l_now_get, _pw_material.LorentzElectricParamCmplx_l_now_set)
    l_new = property(_pw_material.LorentzElectricParamCmplx_l_new_get, _pw_material.LorentzElectricParamCmplx_l_new_set)

    def set(self, a, c):
        return _pw_material.LorentzElectricParamCmplx_set(self, a, c)

    def __init__(self):
        _pw_material.LorentzElectricParamCmplx_swiginit(self, _pw_material.new_LorentzElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_LorentzElectricParamCmplx

# Register LorentzElectricParamCmplx in _pw_material:
_pw_material.LorentzElectricParamCmplx_swigregister(LorentzElectricParamCmplx)

class LorentzMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.LorentzMagneticParamCmplx_swiginit(self, _pw_material.new_LorentzMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_LorentzMagneticParamCmplx

# Register LorentzMagneticParamCmplx in _pw_material:
_pw_material.LorentzMagneticParamCmplx_swigregister(LorentzMagneticParamCmplx)

class LorentzElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.LorentzElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.LorentzElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.LorentzElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.LorentzElectricCmplx_merge(self, pm_ptr)

    def lps_sum(self, init, lorentz_param):
        return _pw_material.LorentzElectricCmplx_lps_sum(self, init, lorentz_param)

    def update_l(self, e_now, lorentz_param):
        return _pw_material.LorentzElectricCmplx_update_l(self, e_now, lorentz_param)
    __swig_destroy__ = _pw_material.delete_LorentzElectricCmplx

# Register LorentzElectricCmplx in _pw_material:
_pw_material.LorentzElectricCmplx_swigregister(LorentzElectricCmplx)

class LorentzExCmplx(LorentzElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.LorentzExCmplx_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.LorentzExCmplx_swiginit(self, _pw_material.new_LorentzExCmplx())
    __swig_destroy__ = _pw_material.delete_LorentzExCmplx

# Register LorentzExCmplx in _pw_material:
_pw_material.LorentzExCmplx_swigregister(LorentzExCmplx)

class LorentzEyCmplx(LorentzElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.LorentzEyCmplx_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.LorentzEyCmplx_swiginit(self, _pw_material.new_LorentzEyCmplx())
    __swig_destroy__ = _pw_material.delete_LorentzEyCmplx

# Register LorentzEyCmplx in _pw_material:
_pw_material.LorentzEyCmplx_swigregister(LorentzEyCmplx)

class LorentzEzCmplx(LorentzElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.LorentzEzCmplx_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.LorentzEzCmplx_swiginit(self, _pw_material.new_LorentzEzCmplx())
    __swig_destroy__ = _pw_material.delete_LorentzEzCmplx

# Register LorentzEzCmplx in _pw_material:
_pw_material.LorentzEzCmplx_swigregister(LorentzEzCmplx)

class LorentzHxCmplx(DielectricHxCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.LorentzHxCmplx_name(self)

    def __init__(self):
        _pw_material.LorentzHxCmplx_swiginit(self, _pw_material.new_LorentzHxCmplx())
    __swig_destroy__ = _pw_material.delete_LorentzHxCmplx

# Register LorentzHxCmplx in _pw_material:
_pw_material.LorentzHxCmplx_swigregister(LorentzHxCmplx)

class LorentzHyCmplx(DielectricHyCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.LorentzHyCmplx_name(self)

    def __init__(self):
        _pw_material.LorentzHyCmplx_swiginit(self, _pw_material.new_LorentzHyCmplx())
    __swig_destroy__ = _pw_material.delete_LorentzHyCmplx

# Register LorentzHyCmplx in _pw_material:
_pw_material.LorentzHyCmplx_swigregister(LorentzHyCmplx)

class LorentzHzCmplx(DielectricHzCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.LorentzHzCmplx_name(self)

    def __init__(self):
        _pw_material.LorentzHzCmplx_swiginit(self, _pw_material.new_LorentzHzCmplx())
    __swig_destroy__ = _pw_material.delete_LorentzHzCmplx

# Register LorentzHzCmplx in _pw_material:
_pw_material.LorentzHzCmplx_swigregister(LorentzHzCmplx)

class DcpAdeElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    a = property(_pw_material.DcpAdeElectricParamCmplx_a_get, _pw_material.DcpAdeElectricParamCmplx_a_set)
    b = property(_pw_material.DcpAdeElectricParamCmplx_b_get, _pw_material.DcpAdeElectricParamCmplx_b_set)
    c = property(_pw_material.DcpAdeElectricParamCmplx_c_get, _pw_material.DcpAdeElectricParamCmplx_c_set)
    e_old = property(_pw_material.DcpAdeElectricParamCmplx_e_old_get, _pw_material.DcpAdeElectricParamCmplx_e_old_set)
    q_old = property(_pw_material.DcpAdeElectricParamCmplx_q_old_get, _pw_material.DcpAdeElectricParamCmplx_q_old_set)
    q_now = property(_pw_material.DcpAdeElectricParamCmplx_q_now_get, _pw_material.DcpAdeElectricParamCmplx_q_now_set)
    p_old = property(_pw_material.DcpAdeElectricParamCmplx_p_old_get, _pw_material.DcpAdeElectricParamCmplx_p_old_set)
    p_now = property(_pw_material.DcpAdeElectricParamCmplx_p_now_get, _pw_material.DcpAdeElectricParamCmplx_p_now_set)

    def set(self, a, b, c):
        return _pw_material.DcpAdeElectricParamCmplx_set(self, a, b, c)

    def __init__(self):
        _pw_material.DcpAdeElectricParamCmplx_swiginit(self, _pw_material.new_DcpAdeElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_DcpAdeElectricParamCmplx

# Register DcpAdeElectricParamCmplx in _pw_material:
_pw_material.DcpAdeElectricParamCmplx_swigregister(DcpAdeElectricParamCmplx)

class DcpAdeMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DcpAdeMagneticParamCmplx_swiginit(self, _pw_material.new_DcpAdeMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_DcpAdeMagneticParamCmplx

# Register DcpAdeMagneticParamCmplx in _pw_material:
_pw_material.DcpAdeMagneticParamCmplx_swigregister(DcpAdeMagneticParamCmplx)

class DcpAdeElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpAdeElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DcpAdeElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DcpAdeElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DcpAdeElectricCmplx_merge(self, pm_ptr)

    def dps_sum(self, init, dcp_param):
        return _pw_material.DcpAdeElectricCmplx_dps_sum(self, init, dcp_param)

    def cps_sum(self, init, dcp_param):
        return _pw_material.DcpAdeElectricCmplx_cps_sum(self, init, dcp_param)

    def update_q(self, e_old, e_now, e_new, dcp_param):
        return _pw_material.DcpAdeElectricCmplx_update_q(self, e_old, e_now, e_new, dcp_param)

    def update_p(self, e_old, e_now, e_new, dcp_param):
        return _pw_material.DcpAdeElectricCmplx_update_p(self, e_old, e_now, e_new, dcp_param)
    __swig_destroy__ = _pw_material.delete_DcpAdeElectricCmplx

# Register DcpAdeElectricCmplx in _pw_material:
_pw_material.DcpAdeElectricCmplx_swigregister(DcpAdeElectricCmplx)

class DcpAdeExCmplx(DcpAdeElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.DcpAdeExCmplx_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DcpAdeExCmplx_swiginit(self, _pw_material.new_DcpAdeExCmplx())
    __swig_destroy__ = _pw_material.delete_DcpAdeExCmplx

# Register DcpAdeExCmplx in _pw_material:
_pw_material.DcpAdeExCmplx_swigregister(DcpAdeExCmplx)

class DcpAdeEyCmplx(DcpAdeElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.DcpAdeEyCmplx_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DcpAdeEyCmplx_swiginit(self, _pw_material.new_DcpAdeEyCmplx())
    __swig_destroy__ = _pw_material.delete_DcpAdeEyCmplx

# Register DcpAdeEyCmplx in _pw_material:
_pw_material.DcpAdeEyCmplx_swigregister(DcpAdeEyCmplx)

class DcpAdeEzCmplx(DcpAdeElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.DcpAdeEzCmplx_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DcpAdeEzCmplx_swiginit(self, _pw_material.new_DcpAdeEzCmplx())
    __swig_destroy__ = _pw_material.delete_DcpAdeEzCmplx

# Register DcpAdeEzCmplx in _pw_material:
_pw_material.DcpAdeEzCmplx_swigregister(DcpAdeEzCmplx)

class DcpAdeHxCmplx(DielectricHxCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpAdeHxCmplx_name(self)

    def __init__(self):
        _pw_material.DcpAdeHxCmplx_swiginit(self, _pw_material.new_DcpAdeHxCmplx())
    __swig_destroy__ = _pw_material.delete_DcpAdeHxCmplx

# Register DcpAdeHxCmplx in _pw_material:
_pw_material.DcpAdeHxCmplx_swigregister(DcpAdeHxCmplx)

class DcpAdeHyCmplx(DielectricHyCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpAdeHyCmplx_name(self)

    def __init__(self):
        _pw_material.DcpAdeHyCmplx_swiginit(self, _pw_material.new_DcpAdeHyCmplx())
    __swig_destroy__ = _pw_material.delete_DcpAdeHyCmplx

# Register DcpAdeHyCmplx in _pw_material:
_pw_material.DcpAdeHyCmplx_swigregister(DcpAdeHyCmplx)

class DcpAdeHzCmplx(DielectricHzCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpAdeHzCmplx_name(self)

    def __init__(self):
        _pw_material.DcpAdeHzCmplx_swiginit(self, _pw_material.new_DcpAdeHzCmplx())
    __swig_destroy__ = _pw_material.delete_DcpAdeHzCmplx

# Register DcpAdeHzCmplx in _pw_material:
_pw_material.DcpAdeHzCmplx_swigregister(DcpAdeHzCmplx)

class DcpPlrcElectricParamCmplx(ElectricParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    a = property(_pw_material.DcpPlrcElectricParamCmplx_a_get, _pw_material.DcpPlrcElectricParamCmplx_a_set)
    b = property(_pw_material.DcpPlrcElectricParamCmplx_b_get, _pw_material.DcpPlrcElectricParamCmplx_b_set)
    c = property(_pw_material.DcpPlrcElectricParamCmplx_c_get, _pw_material.DcpPlrcElectricParamCmplx_c_set)
    psi_dp_re = property(_pw_material.DcpPlrcElectricParamCmplx_psi_dp_re_get, _pw_material.DcpPlrcElectricParamCmplx_psi_dp_re_set)
    psi_dp_im = property(_pw_material.DcpPlrcElectricParamCmplx_psi_dp_im_get, _pw_material.DcpPlrcElectricParamCmplx_psi_dp_im_set)
    psi_cp_re = property(_pw_material.DcpPlrcElectricParamCmplx_psi_cp_re_get, _pw_material.DcpPlrcElectricParamCmplx_psi_cp_re_set)
    psi_cp_im = property(_pw_material.DcpPlrcElectricParamCmplx_psi_cp_im_get, _pw_material.DcpPlrcElectricParamCmplx_psi_cp_im_set)

    def set(self, a, b, c):
        return _pw_material.DcpPlrcElectricParamCmplx_set(self, a, b, c)

    def __init__(self):
        _pw_material.DcpPlrcElectricParamCmplx_swiginit(self, _pw_material.new_DcpPlrcElectricParamCmplx())
    __swig_destroy__ = _pw_material.delete_DcpPlrcElectricParamCmplx

# Register DcpPlrcElectricParamCmplx in _pw_material:
_pw_material.DcpPlrcElectricParamCmplx_swigregister(DcpPlrcElectricParamCmplx)

class DcpPlrcMagneticParamCmplx(MagneticParamCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.DcpPlrcMagneticParamCmplx_swiginit(self, _pw_material.new_DcpPlrcMagneticParamCmplx())
    __swig_destroy__ = _pw_material.delete_DcpPlrcMagneticParamCmplx

# Register DcpPlrcMagneticParamCmplx in _pw_material:
_pw_material.DcpPlrcMagneticParamCmplx_swigregister(DcpPlrcMagneticParamCmplx)

class DcpPlrcElectricCmplx(MaterialElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpPlrcElectricCmplx_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.DcpPlrcElectricCmplx_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.DcpPlrcElectricCmplx_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.DcpPlrcElectricCmplx_merge(self, pm_ptr)

    def update_psi_dp(self, e_now, e_new, dcp_param):
        return _pw_material.DcpPlrcElectricCmplx_update_psi_dp(self, e_now, e_new, dcp_param)

    def update_psi_cp(self, e_now, e_new, dcp_param):
        return _pw_material.DcpPlrcElectricCmplx_update_psi_cp(self, e_now, e_new, dcp_param)

    def psi_total(self, dcp_param):
        return _pw_material.DcpPlrcElectricCmplx_psi_total(self, dcp_param)
    __swig_destroy__ = _pw_material.delete_DcpPlrcElectricCmplx

# Register DcpPlrcElectricCmplx in _pw_material:
_pw_material.DcpPlrcElectricCmplx_swigregister(DcpPlrcElectricCmplx)

class DcpPlrcExCmplx(DcpPlrcElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.DcpPlrcExCmplx_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.DcpPlrcExCmplx_swiginit(self, _pw_material.new_DcpPlrcExCmplx())
    __swig_destroy__ = _pw_material.delete_DcpPlrcExCmplx

# Register DcpPlrcExCmplx in _pw_material:
_pw_material.DcpPlrcExCmplx_swigregister(DcpPlrcExCmplx)

class DcpPlrcEyCmplx(DcpPlrcElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.DcpPlrcEyCmplx_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.DcpPlrcEyCmplx_swiginit(self, _pw_material.new_DcpPlrcEyCmplx())
    __swig_destroy__ = _pw_material.delete_DcpPlrcEyCmplx

# Register DcpPlrcEyCmplx in _pw_material:
_pw_material.DcpPlrcEyCmplx_swigregister(DcpPlrcEyCmplx)

class DcpPlrcEzCmplx(DcpPlrcElectricCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.DcpPlrcEzCmplx_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.DcpPlrcEzCmplx_swiginit(self, _pw_material.new_DcpPlrcEzCmplx())
    __swig_destroy__ = _pw_material.delete_DcpPlrcEzCmplx

# Register DcpPlrcEzCmplx in _pw_material:
_pw_material.DcpPlrcEzCmplx_swigregister(DcpPlrcEzCmplx)

class DcpPlrcHxCmplx(DielectricHxCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpPlrcHxCmplx_name(self)

    def __init__(self):
        _pw_material.DcpPlrcHxCmplx_swiginit(self, _pw_material.new_DcpPlrcHxCmplx())
    __swig_destroy__ = _pw_material.delete_DcpPlrcHxCmplx

# Register DcpPlrcHxCmplx in _pw_material:
_pw_material.DcpPlrcHxCmplx_swigregister(DcpPlrcHxCmplx)

class DcpPlrcHyCmplx(DielectricHyCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpPlrcHyCmplx_name(self)

    def __init__(self):
        _pw_material.DcpPlrcHyCmplx_swiginit(self, _pw_material.new_DcpPlrcHyCmplx())
    __swig_destroy__ = _pw_material.delete_DcpPlrcHyCmplx

# Register DcpPlrcHyCmplx in _pw_material:
_pw_material.DcpPlrcHyCmplx_swigregister(DcpPlrcHyCmplx)

class DcpPlrcHzCmplx(DielectricHzCmplx):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.DcpPlrcHzCmplx_name(self)

    def __init__(self):
        _pw_material.DcpPlrcHzCmplx_swiginit(self, _pw_material.new_DcpPlrcHzCmplx())
    __swig_destroy__ = _pw_material.delete_DcpPlrcHzCmplx

# Register DcpPlrcHzCmplx in _pw_material:
_pw_material.DcpPlrcHzCmplx_swigregister(DcpPlrcHzCmplx)

class Dm2ElectricParamReal(ElectricParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    omega = property(_pw_material.Dm2ElectricParamReal_omega_get, _pw_material.Dm2ElectricParamReal_omega_set)
    n_atom = property(_pw_material.Dm2ElectricParamReal_n_atom_get, _pw_material.Dm2ElectricParamReal_n_atom_set)
    rho30 = property(_pw_material.Dm2ElectricParamReal_rho30_get, _pw_material.Dm2ElectricParamReal_rho30_set)
    gamma = property(_pw_material.Dm2ElectricParamReal_gamma_get, _pw_material.Dm2ElectricParamReal_gamma_set)
    t1 = property(_pw_material.Dm2ElectricParamReal_t1_get, _pw_material.Dm2ElectricParamReal_t1_set)
    t2 = property(_pw_material.Dm2ElectricParamReal_t2_get, _pw_material.Dm2ElectricParamReal_t2_set)
    hbar = property(_pw_material.Dm2ElectricParamReal_hbar_get, _pw_material.Dm2ElectricParamReal_hbar_set)
    rtol = property(_pw_material.Dm2ElectricParamReal_rtol_get, _pw_material.Dm2ElectricParamReal_rtol_set)
    u = property(_pw_material.Dm2ElectricParamReal_u_get, _pw_material.Dm2ElectricParamReal_u_set)

    def set(self, omega, n):
        return _pw_material.Dm2ElectricParamReal_set(self, omega, n)

    def __init__(self):
        _pw_material.Dm2ElectricParamReal_swiginit(self, _pw_material.new_Dm2ElectricParamReal())
    __swig_destroy__ = _pw_material.delete_Dm2ElectricParamReal

# Register Dm2ElectricParamReal in _pw_material:
_pw_material.Dm2ElectricParamReal_swigregister(Dm2ElectricParamReal)

class Dm2MagneticParamReal(MagneticParamReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _pw_material.Dm2MagneticParamReal_swiginit(self, _pw_material.new_Dm2MagneticParamReal())
    __swig_destroy__ = _pw_material.delete_Dm2MagneticParamReal

# Register Dm2MagneticParamReal in _pw_material:
_pw_material.Dm2MagneticParamReal_swigregister(Dm2MagneticParamReal)

class Dm2ElectricReal(MaterialElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def get_rho(self, idx, bin, rho_idx, t):
        return _pw_material.Dm2ElectricReal_get_rho(self, idx, bin, rho_idx, t)

    def get_u(self, idx, t, u):
        return _pw_material.Dm2ElectricReal_get_u(self, idx, t, u)

    def get_v(self, idx, t, v):
        return _pw_material.Dm2ElectricReal_get_v(self, idx, t, v)

    def get_w(self, idx, t, w):
        return _pw_material.Dm2ElectricReal_get_w(self, idx, t, w)

    def name(self):
        return _pw_material.Dm2ElectricReal_name(self)

    def get_eps_inf(self, idx):
        return _pw_material.Dm2ElectricReal_get_eps_inf(self, idx)

    def attach(self, idx, pm_param_ptr):
        return _pw_material.Dm2ElectricReal_attach(self, idx, pm_param_ptr)

    def merge(self, pm_ptr):
        return _pw_material.Dm2ElectricReal_merge(self, pm_ptr)
    __swig_destroy__ = _pw_material.delete_Dm2ElectricReal

# Register Dm2ElectricReal in _pw_material:
_pw_material.Dm2ElectricReal_swigregister(Dm2ElectricReal)

class Dm2ExReal(Dm2ElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ex, hz, hy, dy, dz, dt, n):
        return _pw_material.Dm2ExReal_update_all(self, ex, hz, hy, dy, dz, dt, n)

    def __init__(self):
        _pw_material.Dm2ExReal_swiginit(self, _pw_material.new_Dm2ExReal())
    __swig_destroy__ = _pw_material.delete_Dm2ExReal

# Register Dm2ExReal in _pw_material:
_pw_material.Dm2ExReal_swigregister(Dm2ExReal)

class Dm2EyReal(Dm2ElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ey, hx, hz, dz, dx, dt, n):
        return _pw_material.Dm2EyReal_update_all(self, ey, hx, hz, dz, dx, dt, n)

    def __init__(self):
        _pw_material.Dm2EyReal_swiginit(self, _pw_material.new_Dm2EyReal())
    __swig_destroy__ = _pw_material.delete_Dm2EyReal

# Register Dm2EyReal in _pw_material:
_pw_material.Dm2EyReal_swigregister(Dm2EyReal)

class Dm2EzReal(Dm2ElectricReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, ez, hy, hx, dx, dy, dt, n):
        return _pw_material.Dm2EzReal_update_all(self, ez, hy, hx, dx, dy, dt, n)

    def __init__(self):
        _pw_material.Dm2EzReal_swiginit(self, _pw_material.new_Dm2EzReal())
    __swig_destroy__ = _pw_material.delete_Dm2EzReal

# Register Dm2EzReal in _pw_material:
_pw_material.Dm2EzReal_swigregister(Dm2EzReal)

class Dm2HxReal(DielectricHxReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.Dm2HxReal_name(self)

    def __init__(self):
        _pw_material.Dm2HxReal_swiginit(self, _pw_material.new_Dm2HxReal())
    __swig_destroy__ = _pw_material.delete_Dm2HxReal

# Register Dm2HxReal in _pw_material:
_pw_material.Dm2HxReal_swigregister(Dm2HxReal)

class Dm2HyReal(DielectricHyReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def update_all(self, hy, ex, ez, dz, dx, dt, n):
        return _pw_material.Dm2HyReal_update_all(self, hy, ex, ez, dz, dx, dt, n)

    def name(self):
        return _pw_material.Dm2HyReal_name(self)

    def __init__(self):
        _pw_material.Dm2HyReal_swiginit(self, _pw_material.new_Dm2HyReal())
    __swig_destroy__ = _pw_material.delete_Dm2HyReal

# Register Dm2HyReal in _pw_material:
_pw_material.Dm2HyReal_swigregister(Dm2HyReal)

class Dm2HzReal(DielectricHzReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def name(self):
        return _pw_material.Dm2HzReal_name(self)

    def __init__(self):
        _pw_material.Dm2HzReal_swiginit(self, _pw_material.new_Dm2HzReal())
    __swig_destroy__ = _pw_material.delete_Dm2HzReal

# Register Dm2HzReal in _pw_material:
_pw_material.Dm2HzReal_swigregister(Dm2HzReal)



